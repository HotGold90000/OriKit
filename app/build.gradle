//apply plugin: 'com.android.application'
//apply plugin: 'kotlin-android'
//apply plugin:  'kotlin-kapt'

plugins {
    id 'com.android.application'
    id 'kotlin-android'
//    id 'kotlin-kapt'
}

//apply plugin: 'kotlin-android-extensions'

android {
//    namespace 'com.orikit'
    compileSdkVersion 34
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.orikit"
        minSdkVersion 31
        targetSdkVersion 34
        versionCode 1
        versionName "1.0"

//        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
//        testOnly false // 禁用 testOnly

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86"
        }

//        compileOptions {
//            sourceCompatibility JavaVersion.VERSION_17
//            targetCompatibility JavaVersion.VERSION_17
//        }
//        kotlinOptions {
//            jvmTarget = '17'
//        }

//        compileOptions {
//            sourceCompatibility JavaVersion.VERSION_11
//            targetCompatibility JavaVersion.VERSION_11
//        }
//        kotlinOptions {
//            jvmTarget = '11'
//        }

    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        pickFirst 'lib/arm64-v8a/libc++_shared.so'
        pickFirst 'lib/armeabi-v7a/libc++_shared.so'
    }

    buildFeatures {
        viewBinding true
    }

    buildTypes {

        debug {
            ndk {
                //选择要添加的对应cpu类型的.so库。
                abiFilters 'armeabi-v7a', 'arm64-v8a'
            }
            testCoverageEnabled = false
            debuggable true
            jniDebuggable true
            renderscriptDebuggable true
        }


        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

//kotlin {
//    jvmToolchain(17) // 或 1.8
//}

dependencies {

    //依赖本地library工程
    implementation project(path: ':orikitx')

    // 必须添加的核心依赖
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation "androidx.activity:activity-ktx:1.2.0"   // 解决 onCreate 等问题
    implementation "androidx.fragment:fragment-ktx:1.3.6"

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-common:$kotlin_version"

    implementation "androidx.lifecycle:lifecycle-livedata-ktx:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-runtime:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-common-java8:${lifecycle_version}"
    implementation "androidx.lifecycle:lifecycle-process:${lifecycle_version}"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation fileTree(dir: "libs", include: ["*.jar"])

//    implementation 'com.google.code.gson:gson:2.10.1'
//    implementation 'androidx.cardview:cardview:1.0.0'

    // Room components
//    def room_version = "2.6.1"
//    implementation "androidx.room:room-runtime:$room_version"
//    implementation "androidx.room:room-ktx:$room_version"
//    kapt "androidx.room:room-compiler:$room_version"

//    implementation 'androidx.recyclerview:recyclerview:1.2.1'

    // 如果你使用 ViewBinding
//    implementation 'androidx.databinding:viewbinding:7.1.2'

    implementation "androidx.appcompat:appcompat:1.2.0" // 升级 appcompat 以匹配

}